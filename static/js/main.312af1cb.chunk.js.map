{"version":3,"sources":["components/excel.js","api/Account.js","components/home.jsx","App.js","index.js"],"names":["Excel","onImportExcel","file","files","target","fileReader","FileReader","onload","event","result","workbook","XLSX","type","data","sheet","Sheets","hasOwnProperty","concat","sheet_to_json","console","log","props","getChildrenMsg","e","error","readAsBinaryString","Button","className","accept","onChange","this","Component","accountlist","a","window","ethereum","request","method","accounts","contracts","mainnet","mainnetConfig","sender","kovan","kovanConfig","heco","hecoConfig","hecotest","hecotestConfig","bsc","bscConfig","Web3","require","Home","useState","account","setaccount","tokenAddress","settokenAddress","decimals","setdecimals","amounts","setamounts","selected","setselected","defaultTab","setdefaultTab","tablelist","settablelist","txHash","setTxHash","txHashList","setTxHashList","token","settoken","totalAmount","settotalAmount","addressArray","setaddressArray","amountWeiArray","setamountWeiArray","allowance","setallowance","symbol","setsymbol","mybalance","setmybalance","btndisabled","setbtndisabled","pageSize","ethBalance","setethBalance","showLoading","setshowLoading","tips","settips","show","setShow","showChange","setshowChange","showNet","setshowNet","txURL","setTxURL","web3","givenProvider","mutliSender","senderAddress","on","arr","setTimeout","chainId","initContract","url","eth","getChainId","Contract","senderAbi","connectWallet","Accounts","then","handleInput","name","value","handleRadio","useEffect","nextPage","amountlist","split","map","item","push","address","amount","parseFloat","obj","transaction","setTotal","getBalance","utils","fromWei","tokenAbi","methods","call","balanceOf","lines","_amountWeiArray","index","length","line","trim","values","amountWei","toWei","isAddress","doBatchSend","sendEther","sendERC20Token","_addressArray","_totalAmount","BN","add","toBN","pageNum","Math","ceil","addressArr","slice","amountWeiArr","batchSendEther","encodeABI","from","encodedData","estimateGas","toHex","toString","to","gas","gasWei","totalNeedWei","gt","txIndex","txHashArr","sendValue","reduce","b","send","transactionHash","catch","err","totalSupply","approve","amountArr","batchSendERC20","Modal","aria-labelledby","centered","onHide","Body","Spinner","animation","variant","Alert","onClose","dismissible","Heading","onClick","Tabs","activeKey","onSelect","k","Tab","eventKey","title","Form","Group","Label","Control","str","Address","Amount","controlId","as","rows","disabled","Table","striped","bordered","hover","i","width","Check","label","href","rel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.312af1cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button} from 'react-bootstrap';\nimport * as XLSX from 'xlsx';\n\nclass Excel extends Component {\n    onImportExcel = file => {\n        const { files } = file.target;\n        const fileReader = new FileReader();\n        fileReader.onload = event => {\n            try {\n                const { result } = event.target;\n                const workbook = XLSX.read(result, { type: 'binary' });\n                let data = [];\n                for (const sheet in workbook.Sheets) {\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\n                        data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\n                    }\n                }\n                console.log('Upload file successful!')\n                this.props.getChildrenMsg(data);\n            } catch (e) {\n                console.error('Unsupported file type!');\n            }\n        };\n        fileReader.readAsBinaryString(files[0]);\n    }\n    render() {\n        return (\n            <div>\n                <Button className=\"upload-wrap\">\n                    <input className=\"file-uploader\" type='file' accept='.xlsx, .xls' onChange={this.onImportExcel} />\n                    <span className=\"upload-text\">Upload file</span>\n                </Button>\n            </div >\n        );\n    }\n}\n\nexport default Excel;\n","const accountlist = async () => {\n    const { ethereum } = window;\n    if (typeof ethereum == 'undefined') {\n        return {\n            type:'error'\n        } ;\n    }\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    return {\n        type:'success',\n        data: accounts[0]\n     }\n\n}\n\nexport default {\n    accountlist,\n}\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Form, Button, Table, Alert, Modal, Spinner } from 'react-bootstrap';\nimport Excel from './excel'\n\nimport Accounts from '../api/Account';\n\nimport tokenAbi from '../abi/ERC20.abi';\nimport senderAbi from '../abi/sender.abi';\n\nimport kovanConfig from '../config/kovan';\nimport mainnetConfig from '../config/mainnet';\n\nimport hecoConfig from '../config/heco';\nimport hecotestConfig from '../config/hecotest';\n\nimport bscConfig from '../config/bsc';\n\nconst contracts = {\n    mainnet: mainnetConfig.sender,\n    kovan: kovanConfig.sender,\n    heco: hecoConfig.sender,\n    hecotest: hecotestConfig.sender,\n    bsc: bscConfig.sender\n}\n\nconst Web3 = require('web3');\n\nexport default function Home() {\n\n    const [account, setaccount] = useState('');\n    // eslint-disable-next-line\n    const [tokenAddress, settokenAddress] = useState('0x000000000000000000000000000000000000bEEF'); // 0xbEEF as Ether\n    const [decimals, setdecimals] = useState('18');\n    const [amounts, setamounts] = useState('');\n    const [selected, setselected] = useState('');\n    // const [list, setlist] = useState([]);\n    const [defaultTab, setdefaultTab] = useState('first');\n    const [tablelist, settablelist] = useState([]);\n    const [txHash, setTxHash] = useState([]);\n    const [txHashList, setTxHashList] = useState([]);\n    const [token, settoken] = useState('');\n\n    const [totalAmount, settotalAmount] = useState(0);\n    const [addressArray, setaddressArray] = useState([]);\n    const [amountWeiArray, setamountWeiArray] = useState([]);\n    const [allowance, setallowance] = useState(0);\n    const [symbol, setsymbol] = useState('');\n    const [mybalance, setmybalance] = useState(0);\n    const [btndisabled, setbtndisabled] = useState(true);\n    const [pageSize] = useState(200); // Default 200 transfer per tx\n    const [ethBalance, setethBalance] = useState('0');\n    const [showLoading, setshowLoading] = useState(false);\n    const [tips, settips] = useState('');\n    const [show, setShow] = useState(false);\n    const [showChange, setshowChange] = useState(false);\n    const [showNet, setshowNet] = useState(false);\n    const [txURL, setTxURL] = useState('');\n\n    const web3 = new Web3(Web3.givenProvider);\n\n\n    var mutliSender = null;\n    var senderAddress = null;\n\n    window.ethereum.on('accountsChanged', function (arr) {\n        setaccount(arr[0])\n        setshowChange(true)\n        setTimeout(() => {\n            setshowChange(false)\n        }, 3000)\n    });\n\n    window.ethereum.on('chainChanged', (chainId) => {\n        setshowNet(true)\n        setTimeout(() => {\n            setshowNet(false)\n        }, 3000)\n    });\n\n    const onChainIdChanged = async () => {\n        initContract();\n    }\n\n    const initContract = async () => {\n\n        let url = null;\n\n        const chainId = await web3.eth.getChainId();\n        console.log('chainId', chainId);\n\n        if (chainId === 1) {\n            senderAddress = contracts.mainnet;\n            url = 'https://etherscan.io/tx/';\n        } else if (chainId === 42) {\n            senderAddress = contracts.kovan;\n            url = 'https://kovan.etherscan.io/tx/';\n        } else if (chainId === 128) {\n            senderAddress = contracts.heco;\n            url = 'https://hecoinfo.com/tx/';\n        } else if (chainId === 256) {\n            senderAddress = contracts.hecotest;\n            url = 'https://testnet.hecoinfo.com/tx/';\n        } else if (chainId === 56) {\n            senderAddress = contracts.bsc;\n            url = 'https://bscscan.com/tx/';\n        } else {\n            console.error('Unsupported network!!!!');\n            return;\n        }\n\n        setTxURL(url);\n\n        console.log(\"sender address: \", senderAddress);\n\n        mutliSender = await new web3.eth.Contract(senderAbi, senderAddress);\n    };\n\n    const connectWallet = async () => {\n        await Accounts.accountlist().then(data => {\n            if (data.type === 'success') {\n                setaccount(data.data)\n            } else {\n                setShow(true)\n            }\n        });\n    }\n\n    const handleInput = (e) => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'token':\n                settokenAddress(value)\n                break;\n            case 'decimals':\n                setdecimals(value)\n                break;\n            case 'amounts':\n                setamounts(value)\n                break;\n            default: break;\n        }\n    }\n\n    const handleRadio = (e) => {\n        setselected(e.target.value)\n    }\n\n    const getChildrenMsg = (data) => {\n        console.log(data)\n        let str = '';\n        data.map(item => {\n            str += `${item.Address},${item.Amount} \\n`;\n        })\n        setamounts(str)\n    }\n\n    useEffect(() => {\n        if (!account || account === \"\" || !amounts || !tokenAddress || !decimals) {\n            setbtndisabled(true)\n\n        } else {\n            setbtndisabled(false)\n        }\n    }, [account, amounts, tokenAddress, decimals])\n\n    const nextPage = async () => {\n\n        let amountlist = amounts.split('\\n');\n        let arr = [];\n        amountlist.map(item => {\n            if (!item) return;\n            arr.push({\n                address: item.split(',')[0],\n                amount: parseFloat(item.split(',')[1]),\n            })\n        })\n\n        if (tokenAddress === '0x000000000000000000000000000000000000bEEF') { // Ether\n            let obj = {\n                tokenAddress,\n                decimals,\n                transaction: arr\n            };\n            settablelist(arr);\n            console.log(\"=====\", obj);\n            setdefaultTab('second')\n\n            console.log(\"Send Ether ...\");\n\n            settoken(null);\n\n            setTotal();\n\n            setallowance(0);\n            setsymbol(\"ETH\");\n\n            const ethBalance = await web3.eth.getBalance(account);\n\n            console.log(\"My balance: \", web3.utils.fromWei(ethBalance));\n            setmybalance(web3.utils.fromWei(ethBalance))\n\n            console.log(\"==============ethBalance\", ethBalance,);\n            setethBalance(web3.utils.fromWei(ethBalance));\n\n        } else { // ERC20\n            let obj = {\n                tokenAddress,\n                decimals,\n                transaction: arr\n            }\n            settablelist(arr)\n            console.log(\"=====\", obj)\n            setdefaultTab('second')\n\n            const token = await new web3.eth.Contract(tokenAbi, tokenAddress);\n            console.log('Send ERC20 token, token address: ', tokenAddress, token);\n            settoken(token);\n\n            setTotal();\n\n            const allowance = await token.methods.allowance(account, senderAddress).call();\n            console.log(\"My allowance: \", web3.utils.fromWei(allowance));\n            setallowance(web3.utils.fromWei(allowance))\n\n            const symbol = await token.methods.symbol().call();\n            console.log('Token symbol: ', symbol);\n            setsymbol(symbol)\n\n            const mybalance = await token.methods.balanceOf(account).call();\n            console.log(\"My balance: \", web3.utils.fromWei(mybalance));\n            setmybalance(web3.utils.fromWei(mybalance))\n\n            const ethBalance = await web3.eth.getBalance(account);\n            console.log(\"==============ethBalance\", ethBalance,)\n            setethBalance(web3.utils.fromWei(ethBalance))\n        }\n    }\n\n\n    const setTotal = () => {\n        let lines = amounts.split('\\n');\n        let addressArray = [];\n        let _amountWeiArray = [];\n        let totalAmount = 0;\n\n        for (let index = 0; index < lines.length; index++) {\n            const line = lines[index].trim();\n            if (line.length === 0) {\n                console.log('skip empty line');\n                continue;\n            }\n            let values = line.split(',');\n\n            let address = values[0].trim();\n            let amountWei = web3.utils.toWei(values[1].trim());\n            let amount = parseFloat(values[1].trim());\n\n            if (!web3.utils.isAddress(address)) {\n                console.log('Invalid address: ', address);\n                continue;\n            }\n\n            addressArray.push(address);\n            _amountWeiArray.push(amountWei);\n\n            totalAmount += amount;\n        }\n\n        settotalAmount(totalAmount);\n        setaddressArray(addressArray);\n        setamountWeiArray(_amountWeiArray);\n        console.log(`Total address : ${addressArray.length}, Total amount : ${totalAmount}`);\n    }\n\n    const doBatchSend = async () => {\n        if (tokenAddress === '0x000000000000000000000000000000000000bEEF') { // Ether\n            // Send Ether\n            sendEther();\n        } else {\n            // Send ERC20 Token\n            sendERC20Token();\n        }\n    }\n\n    const sendEther = async () => {\n        setshowLoading(true);\n        settips('Waiting...');\n\n        console.log(selected);\n\n        // Step-1: Check balance...\n        let lines = amounts.split('\\n');\n        let _addressArray = [];\n        let _amountWeiArray = [];\n        // let _totalAmount = 0;\n        let _totalAmount = new web3.utils.BN(0);\n\n        for (let index = 0; index < lines.length; index++) {\n            const line = lines[index].trim();\n            if (line.length === 0) {\n                console.log('skip empty line');\n                continue;\n            }\n            let values = line.split(',');\n\n            let address = values[0].trim();\n            let amountWei = web3.utils.toWei(values[1].trim());\n\n            if (!web3.utils.isAddress(address)) {\n                console.log('Invalid address: ', address);\n                continue;\n            }\n\n            _addressArray.push(address);\n            _amountWeiArray.push(amountWei);\n\n            _totalAmount = _totalAmount.add(web3.utils.toBN(amountWei));\n        }\n\n        let pageNum = Math.ceil(_addressArray.length / pageSize);\n        let addressArr = _addressArray.slice(0, pageSize);\n        let amountWeiArr = _amountWeiArray.slice(0, pageSize);\n\n        console.log(\"total amount: \", _totalAmount);\n        console.log(\"total amount string: \", web3.utils.toWei(_totalAmount));\n\n        let encodedData = await mutliSender.methods.batchSendEther(addressArr, amountWeiArr).encodeABI({ from: account });\n\n        console.log('encodedData: ', encodedData);\n\n        let gas = await web3.eth.estimateGas({\n            from: account,\n            data: encodedData,\n            value: web3.utils.toHex(_totalAmount.toString()),\n            to: senderAddress\n        });\n\n        let gasPrice = 5;\n        let gasWei = gas * gasPrice;\n\n        console.log('gas', gas);\n        console.log(\"gas wei: \", gasWei);\n\n        let totalNeedWei = _totalAmount.add(web3.utils.toBN(pageNum * gasWei));\n        console.log(\"total need: \", totalNeedWei.toString());\n\n        // fixme: need handle error here!\n        console.log(\"balance: \", web3.utils.toBN(web3.utils.toWei(ethBalance)).toString());\n\n        if (totalNeedWei.gt(web3.utils.toBN(web3.utils.toWei(ethBalance)))) {\n            console.error(\"Insufficent fund!\");\n            return;\n        }\n\n        // Step-2: Sending Ether...\n        let txIndex = 0;\n        let txHashArr = [];\n        for (let index = 0; index < addressArray.length; index += pageSize) {\n            txIndex++;\n            let addressArr = addressArray.slice(index, index + pageSize);\n            let amountWeiArr = amountWeiArray.slice(index, index + pageSize);\n\n            let sendValue = amountWeiArr.reduce((a, b) => web3.utils.toBN(a).add(web3.utils.toBN(b)).toString(), 0);\n\n            settips(`Sending Ether in progress... (${txIndex}/${Math.ceil(addressArray.length / pageSize)})`);\n\n            await mutliSender.methods.batchSendEther(addressArr, amountWeiArr)\n                .send({\n                    from: account,\n                    value: web3.utils.toHex(sendValue)\n                })\n                .then(data => {\n                    console.log('batchSendEther', data);\n                    txHashArr.push(data.transactionHash);\n                    if (txIndex >= Math.ceil(addressArray.length / pageSize)) {\n                        setshowLoading(false);\n                    }\n                }).catch(err => {\n                    setshowLoading(false);\n                });\n        }\n        setTxHashList(txHashArr);\n        setdefaultTab('third');\n    }\n\n    const sendERC20Token = async () => {\n        setshowLoading(true);\n        settips('Waiting...');\n\n        console.log(selected)\n        const decimals = await token.methods.decimals().call();\n        console.log('Decimals: ', decimals);\n\n        // Step-1: Approve\n        if (allowance < totalAmount) {\n            if (selected === 'unlimited') {\n                const totalSupply = await token.methods.totalSupply().call();\n\n                await token.methods.approve(senderAddress, totalSupply).send({ from: account }).then(data => {\n                    console.log('txHash', data);\n                    settips('Unlimited Approve in progress...')\n                    setTxHash(data.transactionHash)\n                }).catch(err => {\n                    setshowLoading(false)\n                });\n            } else {\n                await token.methods.approve(senderAddress, web3.utils.toWei(totalAmount.toString())).send({ from: account }).then(data => {\n                    console.log('txHash', data);\n                    settips('Approve in progress...')\n                    setTxHash(data.transactionHash)\n                }).catch(err => {\n                    setshowLoading(false)\n                });\n            }\n        } else {\n            console.log('Already have enough allowance!');\n        }\n\n        // Step-2: Sending\n        let txIndex = 0;\n        let txHashArr = [];\n        for (let index = 0; index < addressArray.length; index += pageSize) {\n            txIndex++;\n            let addressArr = addressArray.slice(index, index + pageSize);\n            let amountArr = amountWeiArray.slice(index, index + pageSize);\n\n            settips(`Sending ERC20 token in progress... (${txIndex}/${Math.ceil(addressArray.length / pageSize)})`);\n\n            await mutliSender.methods.batchSendERC20(tokenAddress, addressArr, amountArr).send({ from: account })\n                .then(data => {\n                    console.log('batchSendERC20', data);\n                    txHashArr.push(data.transactionHash);\n                    if (txIndex >= Math.ceil(addressArray.length / pageSize)) {\n                        setshowLoading(false);\n                    }\n                }).catch(err => {\n                    setshowLoading(false);\n                });\n\n        }\n        setTxHashList(txHashArr);\n        setdefaultTab('third');\n    }\n\n\n    initContract();\n\n    return (\n        <div className='homeBrdr'>\n\n            <Modal\n                show={showLoading}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                onHide={() => { }}\n            >\n                <Modal.Body className='loading'>\n                    <div className=\"spinner\">\n                        <Spinner animation=\"border\" variant=\"primary\" />\n                    </div>\n                    <h4 className=\"waiting\">{tips}</h4>\n                </Modal.Body>\n            </Modal>\n\n            {show && <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                <Alert.Heading>Please install MetaMask!</Alert.Heading>\n            </Alert>}\n            {\n                showChange && <Alert variant=\"success\">Account was changed</Alert>\n            }\n            {\n                showNet && <Alert variant=\"success\">Chain was changed</Alert>\n            }\n\n            <div className='wallet'>\n                {\n                    !account && <Button variant=\"primary\" onClick={connectWallet}>connect Wallet</Button>\n                }\n                {\n                    account && <span>{account}</span>\n                }\n            </div>\n            <Tabs activeKey={defaultTab} onSelect={(k) => setdefaultTab(k)}>\n                <Tab eventKey=\"first\" title=\"Step1. Prepare\">\n                    <div className=\"container \">\n                        <div className=\"row\">\n                            <div className=\"col-9\">\n                                <Form.Group>\n                                    <Form.Label>Token</Form.Label>\n                                    <Form.Control\n                                        name='token'\n                                        value={tokenAddress}\n                                        onChange={handleInput}\n                                    />\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-3\">\n                                <Form.Group>\n                                    <Form.Label>Decimals</Form.Label>\n                                    <Form.Control\n                                        name='decimals'\n                                        value={decimals}\n                                        onChange={handleInput} />\n                                </Form.Group>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <Excel getChildrenMsg={getChildrenMsg} />\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Addresses with Amounts</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={8}\n                                        name='amounts'\n                                        value={amounts}\n                                        onChange={handleInput} />\n                                </Form.Group>\n                                <div>\n                                    <Button variant=\"primary\" onClick={nextPage} disabled={btndisabled}>Next</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"second\" title=\"Step2. Confirm\">\n                    <div className=\"container\">\n                        <h5>List of recipients</h5>\n                        <div className='tableBrdr'>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>Address</th>\n                                        <th>Amount</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        tablelist.map((i, index) => (<tr key={`${i.address}_${index}`}>\n                                            <td>{i.address}</td>\n                                            <td>{i.amount}</td>\n                                        </tr>))\n                                    }\n                                </tbody>\n                            </Table>\n                        </div>\n\n                        <h5>Summary</h5>\n                        <Table bordered >\n                            <tbody>\n                                <tr>\n                                    <td width=\"50%\">\n                                        <div className='numbers'>{totalAmount} {symbol}</div>\n                                        <div className=\"tips\">Request approve amount</div>\n                                    </td>\n                                    <td>\n                                        <div className='numbers'>{allowance} {symbol}</div>\n                                        <div className=\"tips\">Your current allowance</div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width=\"50%\">\n                                        <div className='numbers'>{addressArray.length}</div>\n                                        <div className=\"tips\">Total number of addresses</div>\n                                    </td>\n                                    <td>\n                                        <div className='numbers'>{totalAmount} {symbol}</div>\n                                        <div className=\"tips\">Total number of tokens to be sent</div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width=\"50%\">\n                                        <div className='numbers'>{Math.ceil(addressArray.length / pageSize)}</div>\n                                        <div className=\"tips\">Total number of transaction needed</div>\n                                    </td>\n                                    <td>\n                                        <div className='numbers'>{mybalance} {symbol}</div>\n                                        <div className=\"tips\">Your token balance</div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width=\"50%\">\n                                        <div className='numbers' />\n                                        <div className=\"tips\">Approximate cost of operation</div>\n                                    </td>\n                                    <td>\n                                        <div className='numbers'>{ethBalance} ETH</div>\n                                        <div className=\"tips\">Your ETH balance</div>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </Table>\n                        <h5>Amount to Approve</h5>\n                        <Form.Group className='radioGroup'>\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Extra amount to sent\"\n                                name='approveAmount'\n                                onChange={handleRadio}\n                                value='extra'\n                            />\n                            <Form.Check\n                                type=\"radio\"\n                                label=\"Unlimited amount\"\n                                name='approveAmount'\n                                value='unlimited'\n                                onChange={handleRadio}\n                            />\n                        </Form.Group>\n                        <div>\n                            <Button variant=\"primary\" onClick={doBatchSend}>Submit</Button>\n                        </div>\n                    </div>\n                </Tab>\n                <Tab eventKey=\"third\" title=\"Step3. Result\">\n                    <div className=\"container result\">\n                        <h5>Approval history</h5>\n                        <ul className='transaction'>\n                            {\n                                txHash && <li><a href={`${txURL}/${txHash}`} target=\"_blank\" rel=\"noopener noreferrer\">{txHash}</a></li>\n                            }\n                        </ul>\n                        <h5>Transactions history</h5>\n                        <ul>\n                            {\n                                txHashList && txHashList.map(i => (<li key={i}><a href={`${txURL}/${i}`} target=\"_blank\" rel=\"noopener noreferrer\">{i}</a></li>))\n                            }\n                        </ul>\n                    </div>\n                </Tab>\n            </Tabs>\n\n\n        </div>\n    );\n}\n","import Home from './components/home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/custom.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}